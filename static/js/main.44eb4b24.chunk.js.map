{"version":3,"sources":["components/logo.gif","spotify.js","components/Login.js","state/DataLayer.js","components/Header.js","components/SongRow.js","components/Body.js","components/SidebarOption.js","components/Sidebar.js","components/Footer.js","components/Player.js","App.js","state/reducer.js","serviceWorker.js","index.js"],"names":["module","exports","loginUrl","join","Login","className","src","logo","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","name","artists","map","artist","Body","spotify","discover_weekly","description","fontSize","tracks","items","item","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Footer","class","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","console","log","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44eb4b24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.da234c8a.gif\";","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nconst redirectUri = \"http://nel417.github.io/Spotify_clone\";\n\nconst clientId = \"832fc3b38e604a51a4db401a7e96477b\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromurl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport \"./StyleSheets/Login.css\";\nimport logo from \"./logo.gif\";\nimport { loginUrl } from \"../spotify\";\n\nexport default function Login() {\n  return (\n    <div className=\"login\">\n      <img src={logo} alt=\"spotify logo\" />\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n}\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport \"./StyleSheets/Body.css\";\nimport { useDataLayerValue } from \"../state/DataLayer\";\n\nexport default function Header() {\n  const [{ user }] = useDataLayerValue();\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <SearchIcon />\n        <input placeholder=\"Search For Artists\" type=\"text\" />\n      </div>\n\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt=\"Nick\" />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SongRow({ track }) {\n  return (\n    <div className=\"songRow\">\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\" , \")}-\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport \"./StyleSheets/Body.css\";\nimport { useDataLayerValue } from \"../state/DataLayer\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nexport default function Body({ spotify }) {\n  const [{ discover_weekly }] = useDataLayerValue();\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      <div className=\"body__info\">\n        <img src={discover_weekly?.images[0].url} alt=\"Discover Weekly\" />\n        <div className=\"body__infoText\">\n          <strong> PLAYLIST </strong> <h2> discover weekly </h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\n          <FavoriteIcon fontSize=\"large\" />\n          <MoreHorizIcon />\n        </div>\n\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow track={item.track} /> \n\t\t))}\n\t\t\t \n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./StyleSheets/SidebarOption.css\";\nexport default function SidebarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebarOption\">\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./StyleSheets/sidebar.css\";\nimport \"./StyleSheets/SidebarOption.css\";\nimport { useDataLayerValue } from \"../state/DataLayer\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nexport default function Sidebar() {\n  const [{ playlists }] = useDataLayerValue();\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"spotify logo\"\n      />\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your library\" />\n      <br />\n      <strong className=\"sidebar__title\"> Playlists </strong>\n      <hr />\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption title={playlist.name} />\n      ))}\n      <SidebarOption title=\"HipHop\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./StyleSheets/Footer.css\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\n// import PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div class=\"footer__left\">\n        <img\n          className=\"footer__albumLogo\"\n          src=\"https://i.pinimg.com/originals/b4/75/00/b4750046d94fed05d00dd849aa5f0ab7.jpg\"\n          alt=\"\"\n        />\n        <div className=\"footer__songInfo\">\n          <h4>no song playing</h4>\n          <p>...</p>\n        </div>\n      </div>\n\n      <div class=\"footer__center\">\n        <ShuffleIcon className=\"footer__green\" />\n        <SkipPreviousIcon className=\"footer__icon\" />\n        <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\n        <SkipNextIcon className=\"footer__icon\" />\n        <RepeatIcon className=\"footer__icon footer__green\" />\n      </div>\n\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider aria-labelledby=\"continuous-slider\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Body from \"./Body\";\nimport Sidebar from \"./Sidebar\";\nimport Footer from \"./Footer\";\n\nimport \"./StyleSheets/Player.css\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar />\n        <Body spotify={spotify} />{\" \"}\n      </div>{\" \"}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useEffect} from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { useDataLayerValue } from \"./state/DataLayer\";\nimport { getTokenFromurl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  //   const [token, setToken] = useState(null);\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromurl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      //   setToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n    }\n    spotify\n      .getPlaylist(\"37i9dQZEVXcF0gCJfVox8W?si=EWI7HP_-QaCHJXQ4yiwXiQ\")\n      .then((response) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        });\n      });\n  }, []);\n  console.log(user);\n  console.log(token);\n\n  return (\n    <div className=\"app\">\n      {\" \"}\n      {token ? <Player spotify={spotify} /> : <Login />} {/*  */}\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\n\tuser: null,\n\tplaylists: [],\n\tplaying: false,\n\titem: null,\n\t// token: 'BQDaf18VUxOubMurQpPYJJj6FBZX-d5UuVCHQGIu3-UGPJx_N9bSBtLMtFOt1ddtAqkHWsKFq811OQB0AKU15CppVYLXFaf_ak3MTf4e8sqBDG8s2j3Gj0uz7HorXEjkYmpzg0j9c2nQJzpWMIGZ-nHeSrEp8_SYf3rR54zgSor4CGQXSvZpsT72i8q4OnxYwmOR4u60xGV6MPQ'\n}\n\nconst reducer = (state, action) => {\n\tconsole.log(action)\n\n\tswitch (action.type) {\n\t\tcase 'SET_USER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user\n\t\t\t}\n\n\t\t\tcase 'SET_TOKEN':\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttoken: action.token\n\t\t\t\t}\n\t\t\t\tcase \"SET_PLAYLISTS\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tplaylists: action.playlists\n\t\t\t\t\t}\n\t\t\t\t\tcase 'SET_DISCOVER_WEEKLY':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tdiscover_weekly: action.discover_weekly,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn state\n\t}\n}\n\nexport default reducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DataLayer } from \"./state/DataLayer\";\nimport reducer, { initialState } from \"./state/reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}